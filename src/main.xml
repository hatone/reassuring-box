<?xml version="1.0" encoding="utf-8"?>
<program xmlns="http://www.kinoma.com/kpr/1">
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- my tutorials -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
	<style id="defaultStyle" font="32px bold" color="white" />

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- ASSETS -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<skin id="redSkin" color="#FFFF4500"/>
    <skin id="blueSkin" color="#FFADFF2F"/>
    <skin id="buttonSkin">
        <states names="DISABLED,ENABLED,SELECTED" colors="#FFFAEBD7,white,#c44"/>
    </skin>
    <style id="buttonStyle" font="bold 24px" color="black"/>
    <style id="statusFaceStyle" font="120px" color="#FF000000"/>
    <style id="statusMessageStyle" font="bold 20px" color="#FF000000"/>
    
    <label id="statusMessage" bottom="80" style="statusMessageStyle"/>
    
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- VIEWS -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->

	<container id="GreenScreen" left="0" top="0" right="0" bottom="0" skin="blueSkin">
	       <label string="': )'" top="10" style="statusFaceStyle"></label>
	       <label string="'Everything is fine.'" bottom="80" style="statusMessageStyle"></label>
	</container>
	
	<container id="GreenScreenWithReturn" left="0" top="0" right="0" bottom="0" skin="blueSkin">
	    <label string="': )'" top="10" style="statusFaceStyle"></label>
		<label string="'Take care!'" bottom="80" style="statusMessageStyle"></label>
		<label string="'(Something is working)'" bottom="50" style="statusMessageStyle"></label>
	   	<container width="20" height="20" top="10" right="10" skin="buttonSkin" active="true">
	       <behavior>
               <method id="onTouchBegan" params="container">
                   <![CDATA[
                   fineFlag = 0;
                   ]]>
               </method>
               <method id="onTouchEnded" params="container">
                   <![CDATA[
                   ]]>
               </method>
               <method id="onTap" params="container">
                   <![CDATA[
                   ]]>
               </method>
           </behavior>
           <label string="'x'" style="buttonStyle"></label>
	   </container>
	</container>

	<container id="RedScreen" left="0" top="0" right="0" bottom="0" skin="redSkin">
		<label string="': ('" top="10" style="statusFaceStyle"></label>

	   	<container width="100" height="44" bottom="20" skin="buttonSkin" active="true">
	       <behavior>
               <method id="onTouchBegan" params="container">
                   <![CDATA[
                   ]]>
               </method>
               <method id="onTouchEnded" params="container">
                   <![CDATA[
                   		fineFlag = 1;
                        keepGreen();
                   ]]>
               </method>
               <method id="onTap" params="container">
                   <![CDATA[
                   ]]>
               </method>
           </behavior>
           <label string="'I\'m fine.'" style="buttonStyle"></label>
	   </container>
	</container>
	
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- HANDLERS -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <handler path="/sensorCallback">
        <behavior>
            <method id="onInvoke" params="handler, message">
                <![CDATA[
                changeState(0);
                var response = JSON.parse(message.requestText);                    
                    if (response.change) {
                        trace(message.requestText + "\n");        
 						if(fineFlag == 0) {
                        	changeState(1,response.message);
                        } else if (fineFlag == 1) {
                        	keepGreen();
                        }
                    }
                ]]>

            </method>
        </behavior>
    </handler>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- BEHAVIORS -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <behavior id="ApplicationBehavior">
    	<method id="onLaunch" params="content">
            <![CDATA[
			var path = mergeURI( application.url, "Sensor.js" ).substring("file://".length);
			var query = {
				scriptPath: path,
				callback: "xkpr://" + application.id + "/sensorCallback",
				sendParamsOnce: true,
				mseconds: Math.floor(1000/60),
				skipFirst: false,
              	};
              	
           	var msg = new Message("xkpr://shell/hardwarepins/repeat?" + serializeQuery(query));
            application.invoke(msg, Message.JSON);
            ]]>
        </method>

        <method id="onComplete" params="application, message, data">
            <![CDATA[
				repeatID = JSON.parse( message.responseText ).id;  
            ]]>
        </method>
    </behavior>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- SCRIPTS -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <script>
        <![CDATA[
         	var repeatID = 0;
            application.behavior = new ApplicationBehavior();
            changeState(0);
            
            var fineFlag = 0;
                        
            function changeState(state, message) {
                if (application.last) {
                    application.remove(application.last);
                }
                
                if (state == 1) {
                	application.add(new RedScreen);
                	
                	var errorStatusMessage = new statusMessage;
                	errorStatusMessage.string = "";
                	
                	for(var i=0; i< message.length; i++) {
                		errorStatusMessage.string += message[i] + " ";
                	}
                	
                	if(message.length == 1) {
                		errorStatusMessage.string += "is OK?"	
                	} else {
                		errorStatusMessage.string += "are OK?"
                	} 
                	
                	application.add(errorStatusMessage);
                	
                } else {
                	application.add(new GreenScreen);
                }
                
            }	
            
            function keepGreen() {
                    application.remove(application.last);
                	application.add(new GreenScreenWithReturn);
            }

        ]]>
    </script>
</program>
